{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TaskService = /*#__PURE__*/(() => {\n  class TaskService {\n    constructor(http) {\n      var _a;\n\n      this.http = http;\n      this.apiUrl = environment.apiEndpoint;\n      this.token = (_a = sessionStorage.getItem(\"authToken\")) !== null && _a !== void 0 ? _a : '';\n    } // Obtener todas las tareas\n\n\n    getTasks() {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${this.token}`,\n        'Content-Type': 'application/json'\n      });\n      return this.http.get(this.apiUrl, {\n        headers\n      });\n    } // Crear una nueva tarea\n\n\n    createTask(task) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${this.token}`,\n        'Content-Type': 'application/json'\n      });\n      return this.http.post(this.apiUrl, task, {\n        headers\n      });\n    } // Actualizar el estado de una tarea\n\n\n    updateTask(task) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${this.token}`,\n        'Content-Type': 'application/json'\n      });\n      return this.http.put(`${this.apiUrl}/${task.id}`, task, {\n        headers\n      });\n    } // Eliminar una tarea\n\n\n    deleteTask(id) {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${this.token}`,\n        'Content-Type': 'application/json'\n      });\n      const url = `${this.apiUrl}/${id}`;\n      console.log(\"Url: \", url);\n      return this.http.delete(url, {\n        headers\n      });\n    }\n\n  }\n\n  TaskService.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n  return TaskService;\n})();","map":null,"metadata":{},"sourceType":"module"}