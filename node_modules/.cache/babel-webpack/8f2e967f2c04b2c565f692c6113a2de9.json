{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ModalTaskComponent } from 'src/app/modals/modal-task/modal-task.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../../services/task.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/divider\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/table\";\n\nfunction TaskListComponent_div_9_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" T\\u00EDtulo \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskListComponent_div_9_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r13.title, \" \");\n  }\n}\n\nfunction TaskListComponent_div_9_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r14.description, \" \");\n  }\n}\n\nfunction TaskListComponent_div_9_th_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Descripci\\u00F3n \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskListComponent_div_9_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Estado \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskListComponent_div_9_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵelementStart(1, \"div\", 17);\n    i0.ɵɵelementStart(2, \"mat-icon\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 19);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r15 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"color\", ctx_r8.getStatusColor(task_r15.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.getStatusIcon(task_r15.status), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r15.status);\n  }\n}\n\nfunction TaskListComponent_div_9_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Acciones \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskListComponent_div_9_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵelementStart(1, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_9_td_13_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const task_r16 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return ctx_r17.updateTask(task_r16);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_9_td_13_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const task_r16 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.deleteTask(task_r16.id);\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TaskListComponent_div_9_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 22);\n  }\n}\n\nfunction TaskListComponent_div_9_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 23);\n  }\n}\n\nconst _c0 = function () {\n  return [\"title\", \"description\", \"status\", \"actions\"];\n};\n\nfunction TaskListComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"table\", 6);\n    i0.ɵɵelementContainerStart(2, 7);\n    i0.ɵɵtemplate(3, TaskListComponent_div_9_th_3_Template, 2, 0, \"th\", 8);\n    i0.ɵɵtemplate(4, TaskListComponent_div_9_td_4_Template, 2, 1, \"td\", 9);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(5, 10);\n    i0.ɵɵtemplate(6, TaskListComponent_div_9_td_6_Template, 2, 1, \"td\", 9);\n    i0.ɵɵtemplate(7, TaskListComponent_div_9_th_7_Template, 2, 0, \"th\", 8);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(8, 11);\n    i0.ɵɵtemplate(9, TaskListComponent_div_9_th_9_Template, 2, 0, \"th\", 8);\n    i0.ɵɵtemplate(10, TaskListComponent_div_9_td_10_Template, 6, 3, \"td\", 9);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(11, 12);\n    i0.ɵɵtemplate(12, TaskListComponent_div_9_th_12_Template, 2, 0, \"th\", 8);\n    i0.ɵɵtemplate(13, TaskListComponent_div_9_td_13_Template, 7, 0, \"td\", 9);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(14, TaskListComponent_div_9_tr_14_Template, 1, 0, \"tr\", 13);\n    i0.ɵɵtemplate(15, TaskListComponent_div_9_tr_15_Template, 1, 0, \"tr\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dataSource\", ctx_r0.tasks);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"matHeaderRowDef\", i0.ɵɵpureFunction0(3, _c0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", i0.ɵɵpureFunction0(4, _c0));\n  }\n}\n\nfunction TaskListComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelementStart(1, \"mat-icon\", 25);\n    i0.ɵɵtext(2, \"info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"No hay tareas disponibles.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TaskListComponent = /*#__PURE__*/(() => {\n  class TaskListComponent {\n    constructor(taskService, fb, dialog) {\n      this.taskService = taskService;\n      this.fb = fb;\n      this.dialog = dialog;\n      this.tasks = new Array();\n      this.displayedColumns = ['title', 'status', 'actions'];\n      this.productForm = this.fb.group({\n        title: ['', [Validators.required, Validators.minLength(3)]],\n        description: [''],\n        status: ['POR HACER', Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      this.getTasks();\n    }\n\n    getTasks() {\n      this.taskService.getTasks().subscribe(respuesta => {\n        this.tasks = respuesta.result; // Asigna directamente el resultado a tasks\n      }, error => {\n        console.error('Error obteniendo lista de tareas:', error); // Maneja el error adecuadamente\n      });\n    }\n\n    updateTask(task) {\n      this.openModal(task);\n    }\n\n    deleteTask(taskId) {\n      console.log(\"TaskId: \", taskId);\n\n      if (confirm('¿Estás seguro de que quieres eliminar esta tarea?')) {\n        this.taskService.deleteTask(taskId).subscribe(() => {\n          console.log('Tarea eliminada correctamente');\n          this.getTasks();\n        }, error => {\n          console.error('Error al eliminar la tarea:', error);\n        });\n      }\n    }\n\n    getStatusColor(status) {\n      switch (status) {\n        case 'POR HACER':\n          return 'warn';\n        // Azul o color primario\n\n        case 'EN PROGRESO':\n          return 'info';\n        // Rojo o amarillo\n\n        case 'COMPLETADA':\n          return 'primary';\n        // Un color diferente (puedes ajustarlo)\n\n        default:\n          return '';\n      }\n    }\n\n    getStatusIcon(status) {\n      switch (status) {\n        case 'POR HACER':\n          return 'pending';\n        // Ícono de activado\n\n        case 'EN PROGRESO':\n          return 'hourglass_empty';\n        // Ícono de cancelado\n\n        case 'COMPLETADA':\n          return 'check_circle';\n        // Ícono de camión\n\n        default:\n          return 'help';\n        // Ícono por defecto\n      }\n    }\n\n    openModal(task) {\n      var titulo = task == null ? \"Agregar Tarea\" : \"Editar Tarea\";\n      this.dialog.open(ModalTaskComponent, {\n        width: '650px',\n        height: '485px',\n        panelClass: 'custom-modal',\n        data: {\n          task,\n          title: titulo\n        }\n      });\n    }\n\n  }\n\n  TaskListComponent.ɵfac = function TaskListComponent_Factory(t) {\n    return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  TaskListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskListComponent,\n    selectors: [[\"app-task-list\"]],\n    decls: 15,\n    vars: 2,\n    consts: [[1, \"task-list-container\"], [1, \"task-card\"], [\"class\", \"table-container\", 4, \"ngIf\", \"ngIfElse\"], [\"noTask\", \"\"], [\"mat-fab\", \"\", \"color\", \"primary\", 1, \"add-button\", 3, \"click\"], [1, \"table-container\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"title\"], [\"mat-header-cell\", \"\", \"class\", \"color-head\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"description\"], [\"matColumnDef\", \"status\", 1, \"color-head\"], [\"matColumnDef\", \"actions\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\", 1, \"color-head\"], [\"mat-cell\", \"\"], [1, \"status-container\"], [3, \"color\"], [1, \"status-text\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [1, \"no-task\"], [\"color\", \"warn\"]],\n    template: function TaskListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵelementStart(2, \"mat-card-header\");\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵelementStart(4, \"h2\");\n        i0.ɵɵtext(5, \"Tareas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n        i0.ɵɵtext(7, \"Listado de Tareas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"mat-divider\");\n        i0.ɵɵtemplate(9, TaskListComponent_div_9_Template, 16, 5, \"div\", 2);\n        i0.ɵɵtemplate(10, TaskListComponent_ng_template_10_Template, 5, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_12_listener() {\n          return ctx.openModal(null);\n        });\n        i0.ɵɵelementStart(13, \"mat-icon\");\n        i0.ɵɵtext(14, \"add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(11);\n\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.tasks.length > 0)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i4.MatDivider, i5.NgIf, i6.MatButton, i7.MatIcon, i8.MatTable, i8.MatColumnDef, i8.MatHeaderCellDef, i8.MatCellDef, i8.MatHeaderRowDef, i8.MatRowDef, i8.MatHeaderCell, i8.MatCell, i8.MatHeaderRow, i8.MatRow],\n    styles: [\"@charset \\\"UTF-8\\\";body[_ngcontent-%COMP%]{padding:20px;background-color:#fff;color:#333;margin:20px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.yellow-button[_ngcontent-%COMP%]{background-color:orange;color:#000}.button-spacing[_ngcontent-%COMP%]{margin-right:10px}  .mat-row:hover{background-color:#add8e6;cursor:pointer}.task-list-container[_ngcontent-%COMP%]{padding-left:30px;padding-right:30px}.task-card[_ngcontent-%COMP%]{margin:0 auto;max-width:1200px;padding:16px}.table-container[_ngcontent-%COMP%]{display:block;width:100%;overflow-x:auto;margin-bottom:16px}table[_ngcontent-%COMP%]{width:100%;min-width:800px}.color-head[_ngcontent-%COMP%]{background-color:#8a2be2;color:#fff}.mat-card[_ngcontent-%COMP%]{width:100%}.mat-elevation-z8[_ngcontent-%COMP%]{width:100%}.no-task[_ngcontent-%COMP%]{text-align:center;padding:16px}.no-task[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{font-size:48px;margin-bottom:8px}.add-button[_ngcontent-%COMP%]{position:fixed;bottom:16px;right:16px;z-index:1000}.status-container[_ngcontent-%COMP%]{display:flex;align-items:center;grid-gap:8px;gap:8px}.status-text[_ngcontent-%COMP%]{line-height:1}.align-right[_ngcontent-%COMP%]{text-align:right}.mat-header-cell[_ngcontent-%COMP%], .mat-cell[_ngcontent-%COMP%]{padding-right:16px}\"]\n  });\n  return TaskListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}