{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Task } from '../../models/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/task.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/core\";\n\nfunction ModalTaskComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El T\\u00EDtulo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModalTaskComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El t\\u00EDtulo debe tener al menos 3 caracteres \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModalTaskComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La descripci\\u00F3n es obligatoria \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModalTaskComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La descripci\\u00F3n debe tener al menos 3 caracteres \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModalTaskComponent_mat_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const status_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", status_r5, \" \");\n  }\n}\n\nexport let ModalTaskComponent = /*#__PURE__*/(() => {\n  class ModalTaskComponent {\n    constructor(fb, taskService, dialogRef, data) {\n      var _a;\n\n      this.fb = fb;\n      this.taskService = taskService;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.task = new Task();\n      this.statusOptions = ['POR HACER', 'EN PROGRESO', 'COMPLETADA'];\n      this.taskAdded = new EventEmitter(); // ✅ Evento de salida\n\n      this.title = data.title;\n      this.task = (_a = data.task) !== null && _a !== void 0 ? _a : new Task();\n    }\n\n    ngOnInit() {\n      this.taskForm = this.fb.group({\n        title: ['', [Validators.required, Validators.minLength(3)]],\n        description: [''],\n        status: ['']\n      });\n    } // Método para manejar el submit del formulario\n\n\n    onSubmit() {\n      if (this.taskForm.valid) {\n        this.taskService.createTask(this.task).subscribe(response => {\n          this.taskAdded.emit(Object.assign(response, Task));\n          this.closeModal();\n        }, error => {\n          console.error(\"Error al guardar la tarea:\", error);\n        });\n      } else {\n        console.log(\"Formulario inválido\");\n      }\n    }\n\n    onNoClick() {}\n\n    closeModal() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  ModalTaskComponent.ɵfac = function ModalTaskComponent_Factory(t) {\n    return new (t || ModalTaskComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  ModalTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalTaskComponent,\n    selectors: [[\"app-task-form\"]],\n    outputs: {\n      taskAdded: \"taskAdded\"\n    },\n    decls: 27,\n    vars: 11,\n    consts: [[\"mat-dialog-title\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-row\"], [\"matInput\", \"\", \"formControlName\", \"title\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"description\", 3, \"ngModel\", \"ngModelChange\"], [\"appearance\", \"outline\"], [\"formControlName\", \"status\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-actions\", \"\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-flat-button\", \"\", \"color\", \"accent\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n    template: function ModalTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ModalTaskComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"mat-form-field\");\n        i0.ɵɵelementStart(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Nombre de la Tarea\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ModalTaskComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.task.title = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, ModalTaskComponent_mat_error_8_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵtemplate(9, ModalTaskComponent_mat_error_9_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\");\n        i0.ɵɵelementStart(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Descripci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ModalTaskComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.task.description = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, ModalTaskComponent_mat_error_14_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵtemplate(15, ModalTaskComponent_mat_error_15_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 2);\n        i0.ɵɵelementStart(17, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function ModalTaskComponent_Template_mat_select_ngModelChange_20_listener($event) {\n          return ctx.task.status = $event;\n        });\n        i0.ɵɵtemplate(21, ModalTaskComponent_mat_option_21_Template, 2, 2, \"mat-option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 9);\n        i0.ɵɵelementStart(23, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function ModalTaskComponent_Template_button_click_23_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵtext(24, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 11);\n        i0.ɵɵtext(26, \"Guardar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_6_0;\n        let tmp_7_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.data.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.taskForm.get(\"title\")) == null ? null : tmp_3_0.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.taskForm.get(\"title\")) == null ? null : tmp_4_0.hasError(\"minlength\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.description);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.taskForm.get(\"description\")) == null ? null : tmp_6_0.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_7_0 = ctx.taskForm.get(\"description\")) == null ? null : tmp_7_0.hasError(\"minlength\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.task.status);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.statusOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.taskForm.invalid);\n      }\n    },\n    directives: [i3.MatDialogTitle, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatFormField, i4.MatLabel, i5.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i6.NgIf, i7.MatSelect, i6.NgForOf, i3.MatDialogActions, i8.MatButton, i4.MatError, i9.MatOption],\n    styles: [\".custom-dialog-container[_ngcontent-%COMP%]{background-color:#fff9c4;border-radius:10px;box-shadow:0 4px 12px #0003;padding:20px}mat-dialog-title[_ngcontent-%COMP%]{text-align:center;font-size:1.5em;font-weight:bold;color:#333}mat-form-field[_ngcontent-%COMP%]{width:100%;margin-bottom:8px}  mat-dialog-actions{display:flex!important;justify-content:flex-end!important;grid-gap:10px!important;gap:10px!important}.input-row[_ngcontent-%COMP%]{display:flex;grid-gap:16px;gap:16px;margin-bottom:16px}.input-row[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{flex:1}@media (max-width: 600px){.input-row[_ngcontent-%COMP%]{flex-direction:column}}\"]\n  });\n  return ModalTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}