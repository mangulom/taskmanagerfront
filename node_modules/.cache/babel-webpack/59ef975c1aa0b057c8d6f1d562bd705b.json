{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Login } from '../../models/login';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/login.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" El usuario es requerido y debe ser v\\u00E1lido. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1, \" La contrase\\u00F1a es requerida. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, loginService, router) {\n      this.fb = fb;\n      this.loginService = loginService;\n      this.router = router;\n      this.login = new Login();\n      this.login = new Login();\n    }\n\n    ngOnInit() {\n      this.loginForm = this.fb.group({\n        nick: ['', [Validators.required, Validators.minLength(3)]],\n        password: ['']\n      });\n    }\n\n    onSubmit() {\n      if (this.loginForm.valid) {\n        this.login = new Login();\n        this.login.nick = this.loginForm.value.nick;\n        this.login.password = this.loginForm.value.password;\n        this.loginService.doLogin(this.login).subscribe(response => {\n          const token = response.result;\n          sessionStorage.setItem('authToken', token);\n          this.loginService.setLoggedIn(true);\n        }, error => {\n          console.error('Error de autenticación:', error);\n        });\n      } else {\n        console.log(\"Formulario inválido\");\n      }\n\n      this.router.navigate(['']);\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login-form\"]],\n    decls: 16,\n    vars: 4,\n    consts: [[1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-field\"], [\"for\", \"nick\"], [\"id\", \"nick\", \"type\", \"text\", \"formControlName\", \"nick\", \"required\", \"\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"error\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵtext(2, \"Iniciar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelementStart(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Correo Electr\\u00F3nico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 2);\n        i0.ɵɵelementStart(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 8);\n        i0.ɵɵtext(15, \"Iniciar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"nick\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.loginForm.get(\"nick\")) == null ? null : tmp_1_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i4.NgIf],\n    styles: [\"@charset \\\"UTF-8\\\";.login-container[_ngcontent-%COMP%]{max-width:450px;margin:30px auto auto;padding:20px;border:1px solid #ccc;border-radius:8px;box-shadow:0 4px 10px #0000001a;background-color:#fff}.form-field[_ngcontent-%COMP%]{margin-bottom:15px}label[_ngcontent-%COMP%]{display:block;margin-bottom:5px}input[_ngcontent-%COMP%]{width:100%;padding:8px;border:1px solid #ccc;border-radius:4px;font-size:14px;box-sizing:border-box}button[_ngcontent-%COMP%]{width:100%;padding:10px;background-color:#007bff;color:#fff;border:none;border-radius:4px;cursor:pointer}button[_ngcontent-%COMP%]:disabled{background-color:#ccc}.error[_ngcontent-%COMP%]{color:red;font-size:.8em}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}